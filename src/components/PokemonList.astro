---
import PokemonCard from "./PokemonCard.astro";

const generationsList = [
	{ id: 1, listStart: "1", listEnd: "151" },
	{ id: 2, listStart: "152", listEnd: "251" },
	{ id: 3, listStart: "252", listEnd: "386" },
	{ id: 4, listStart: "387", listEnd: "493" },
	{ id: 5, listStart: "494", listEnd: "649" },
	{ id: 6, listStart: "650", listEnd: "721" },
	{ id: 7, listStart: "722", listEnd: "809" },
	{ id: 8, listStart: "810", listEnd: "905" },
	{ id: 9, listStart: "906", listEnd: "1025" },
	{ id: "alt", listStart: "10001", listEnd: "10277" },
];

const currentGen = Astro.params.generation as string;

const defaultCount = 151;
const defaultOffset = 0;

const selectedGeneration = generationsList.find(
	(gen) => gen.id.toString() === currentGen
);

const numberOfPokemonForSelectedGeneration = selectedGeneration
	? parseInt(selectedGeneration.listEnd) -
		parseInt(selectedGeneration.listStart) +
		1
	: defaultCount;

const count = numberOfPokemonForSelectedGeneration || 151;
const offset = selectedGeneration
	? parseInt(selectedGeneration.listStart) - 1
	: defaultOffset;

console.log("Number of Pokémon for selected generation:", count);
console.log("Offset for selected generation:", offset);

const apiURL = "https://pokeapi.co/api/v2/pokemon/";
const response = await fetch(`${apiURL}?limit=${count}&offset=${offset}`);

let data = await response.json();
---

<ul class="pokemon-list" tabindex="-1">
	{
		data.results.map((pokemon: { name: string }, key: number) => (
			<PokemonCard name={pokemon.name} key={key} />
		))
	}
</ul>

<script>
	let data = {};
	const apiURL = "https://pokeapi.co/api/v2/pokemon/";
	// Fonction pour récupérer et mettre à jour la liste des Pokémon
	async function updatePokemonList(listStart: string, listEnd: string) {
		const count = parseInt(listEnd) - parseInt(listStart) + 1;
		const offset = parseInt(listStart) - 1;
		const response = await fetch(`${apiURL}?limit=${count}&offset=${offset}`);
		data = await response.json();
	}

	const genForms = document.querySelectorAll(
		".gen-form"
	) as NodeListOf<HTMLFormElement>;

	genForms.forEach((form) => {
		form.addEventListener("submit", (e) => {
			e.preventDefault();
			const formData = new FormData(form);
			const genSelectValue = formData.get("gen-select") as string;
			const [listStart, listEnd] = genSelectValue?.split(",") || [];

			updatePokemonList(listStart, listEnd);
		});
	});
</script>

<style>
	.pokemon-list {
		min-width: 400px;
		width: 100%;
		max-width: 520px;
		height: calc(100vh - 56px);
		overflow-y: scroll;
		display: flex;
		flex-direction: column;
		gap: 15px;
		padding: 20px 10px 20px 0;
		margin-right: 20px;

		&::-webkit-scrollbar {
			display: none;
		}
		&:focus-visible {
			outline: 5px solid red;
		}
	}
	@media (width < 992px) {
		.pokemon-list {
			height: calc(100vh - 451px);
			margin-inline: auto;
			padding-right: 0;
		}
	}
	@media (width < 400px) {
		.pokemon-list {
			width: 100%;
			min-width: initial;
		}
	}
</style>
